# The XML processing configuration for peak.web.templates

[Import on Demand]
# We'll be pulling stuff from these module a lot
pwt = "peak.web.templates"
SOX = "peak.util.SOX"

[peak.config.xml_functions]
# When we begin parsing a document, there's a lot of stuff to set up
start = pwt.setupDocument

[XML Attributes for http://peak.telecommunity.com/DOMlets/]
# These are the "old" domlet/define attributes, still here for compatibility
domlet = pwt.negotiateDomlet
define = pwt.negotiateDefine
*      = SOX.invalidAttribute

[XML Elements for *]
# Normally, any XML element gets set up by this routine
* = pwt.setupElement


[XML Attributes for mid:pwt-this@peak-dev.org]
# New-style 'this:foo' attributes: look 'em up in 'peak.web.verbs' and call
# them with an extra 'this' argument

* = lambda parser, data, name,value, op=config.lookup(
        targetObj,PropertyName('peak.web.verbs.'+configKey.name)
    ): op('this', parser, data, name, value)


[XML Attributes for mid:pwt-content@peak-dev.org]
# New-style 'content:foo' attributes: look 'em up in 'peak.web.verbs' and call
# them with an extra 'content' argument

* = lambda parser, data, name,value, op=config.lookup(
        targetObj,PropertyName('peak.web.verbs.'+configKey.name)
    ): op('content', parser, data, name, value)



[XML Attributes for mid:pwt-with@peak-dev.org]
# New-style 'with:foo' attributes: they're macro parameters, handled by
# pwt.withParam

* = pwt.withParam


[peak.web.verbs]
# Verbs for use with 'this:' and 'content:' attributes

is       = pwt.nodeIs
replace  = pwt.negotiatorFactory(pwt.Replace)
xml      = pwt.negotiatorFactory(pwt.ReplaceXML)
list     = pwt.negotiatorFactory(pwt.TaglessList)
url.*    = pwt.negotiatorFactory(pwt.URLTag)    # XXX refactor
url      = pwt.negotiatorFactory(pwt.TaglessURLText)
uses     = pwt.negotiatorFactory(pwt.Uses)
unless   = pwt.negotiatorFactory(pwt.Unless)
expects  = pwt.negotiatorFactory(pwt.Expects)


[peak.config.xml_namespaces]
# If these xml namespace prefixes aren't defined, assume they're ours.
# Using this feature makes for easy editing, but of course the documents
# won't be "valid" XML unless you include the definitions.  On the bright
# side, you can easily copy them from here, sticking 'xmlns:' in front of
# each one to turn them into XML namespace definitions.

pwt = "http://peak.telecommunity.com/DOMlets/"
this = "mid:pwt-this@peak-dev.org"
content = "mid:pwt-content@peak-dev.org"
with = "mid:pwt-with@peak-dev.org"









# 'pwt', 'content', 'this', and 'with' do not apply to elements; raise
# errors if they're used that way.

[XML Elements for mid:pwt-this@peak-dev.org]
* = SOX.invalidElement

[XML Elements for mid:pwt-content@peak-dev.org]
* = SOX.invalidElement

[XML Elements for mid:pwt-with@peak-dev.org]
* = SOX.invalidElement

[XML Elements for http://peak.telecommunity.com/DOMlets/]
* = SOX.invalidElement



























